version: "3.8"
services:
  cassandra1:
    image: cassandra:latest
    container_name: cassandra1
    ports:
      - "6999:7000"        # Puerto de comunicacion intra-node
      - "7001:7001"        # Puerto de comunicacion intra-node TLS
      - "7197:7199"        # Puerto para JMX
      - "9042:9042"        # Puerto CQL para conectarse desde el host (nodo 1)
      - "9160:9160"        # Puerto de servicio thrift
    environment:
      - CASSANDRA_SEEDS=cassandra1   # Este primer nodo se autodetermina como seed
      - CASSANDRA_CLUSTER_NAME=ReservaCluster
      - LOCAL_JMX=no                # Por defecto Cassandra limita JMX a local para permitir recolección de métricas
      - HEAP_NEWSIZE=128M
      - MAX_HEAP_SIZE=1024M
      - JVM_EXTRA_OPTS=-Dcom.sun.management.jmxremote.authenticate=true
                       -Dcom.sun.management.jmxremote.password.file=/etc/cassandra/jmxremote.password
                       -Dcom.sun.management.jmxremote.access.file=/etc/cassandra/jmxremote.access
                       -Dcom.sun.management.jmxremote.ssl=false
    healthcheck:
      test: ["CMD", "cqlsh", "-e", "DESCRIBE KEYSPACES"]  # Verifica que cqlsh responda
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - ./data-1:/data-1
      - ./jmx/jmxremote.password:/etc/cassandra/jmxremote.password
      - ./jmx/jmxremote.access:/etc/cassandra/jmxremote.access
    networks:
      - cassandra_net

  cassandra2:
    image: cassandra:latest
    container_name: cassandra2
    ports:
      - "7198:7199"
      - "9043:9042"        # Exponer segundo nodo en puerto 9043 del host
    environment:
      - CASSANDRA_SEEDS=cassandra1   # Usar nodo1 como seed
      - CASSANDRA_CLUSTER_NAME=ReservaCluster
      - LOCAL_JMX=no
      - HEAP_NEWSIZE=128M
      - MAX_HEAP_SIZE=1024M
      - JVM_EXTRA_OPTS=-Dcom.sun.management.jmxremote.authenticate=true
                       -Dcom.sun.management.jmxremote.password.file=/etc/cassandra/jmxremote.password
                       -Dcom.sun.management.jmxremote.access.file=/etc/cassandra/jmxremote.access
                       -Dcom.sun.management.jmxremote.ssl=false
    healthcheck:
      test: ["CMD", "cqlsh", "-e", "DESCRIBE KEYSPACES"]  # Verifica que cqlsh responda
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - ./jmx/jmxremote.password:/etc/cassandra/jmxremote.password
      - ./jmx/jmxremote.access:/etc/cassandra/jmxremote.access
    depends_on:
      cassandra1:
        condition: service_healthy   # Espera a que nodo1 esté healthy antes de iniciar
    networks:
      - cassandra_net

  cassandra3:
    image: cassandra:latest
    container_name: cassandra3
    ports:
      - "7199:7199"
      - "9044:9042"        # Exponer tercer nodo en puerto 9044 del host
    environment:
      - CASSANDRA_SEEDS=cassandra1   # Usar nodo1 como seed
      - CASSANDRA_CLUSTER_NAME=ReservaCluster
      - LOCAL_JMX=no
      - HEAP_NEWSIZE=128M
      - MAX_HEAP_SIZE=1024M
      - JVM_EXTRA_OPTS=-Dcom.sun.management.jmxremote.authenticate=true
                       -Dcom.sun.management.jmxremote.password.file=/etc/cassandra/jmxremote.password
                       -Dcom.sun.management.jmxremote.access.file=/etc/cassandra/jmxremote.access
                       -Dcom.sun.management.jmxremote.ssl=false
    healthcheck:
      test: ["CMD", "cqlsh", "-e", "DESCRIBE KEYSPACES"]  # Verifica que cqlsh responda
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - ./jmx/jmxremote.password:/etc/cassandra/jmxremote.password
      - ./jmx/jmxremote.access:/etc/cassandra/jmxremote.access
    depends_on:
      cassandra2:
        condition: service_healthy   # Espera a nodo2 (y transitivamente nodo1) antes de iniciar
    networks:
      - cassandra_net

volumes:
  data-1:
    driver: local
  data-2:
    driver: local
  data-3:
    driver: local

networks:
  cassandra_net:
    driver: bridge
